USE ROLE SYSADMIN;
USE DATABASE SNOWFLAKE_CODE_SAMPLE;
USE SCHEMA PUBLIC;
USE WAREHOUSE SCS;

/** CREATE TABLE WITH CLUSTERING **/
CREATE OR REPLACE TRANSIENT TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.EMPLOYEE (
	TYPE VARCHAR(10),
	NAME VARCHAR(10), 
	COUNTRY VARCHAR(20), 
	DATE_C  DATE
) 
CLUSTER BY (DATE_C);

/** IF YOU HAVE ALREADY LOADED DATA **/

ALTER TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.EMPLOYEE CLUSTER BY (DATE_C);

ALTER TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.EMPLOYEE RESUME RECLUSTER;

SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.CUSTOMER LIMIT 100;

SELECT COUNT(DISTINCT C_NATIONKEY), COUNT(DISTINCT C_MKTSEGMENT) FROM SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER LIMIT 100;

/**** CREATE TABLE WITHOUT CLUSTER ***/
ALTER WAREHOUSE SCS SET WAREHOUSE_SIZE = XXLARGE;

CREATE OR REPLACE TRANSIENT TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_NOCLUSTER
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.CUSTOMER;

ALTER WAREHOUSE SCS SET WAREHOUSE_SIZE = XSMALL;

DESC TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_NOCLUSTER; -- Using Describe to get info of the table

-- Getting information to see check if a column combination is a good candidate for a clustering key
SELECT SYSTEM$CLUSTERING_INFORMATION('SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_NOCLUSTER','(C_MKTSEGMENT, C_CUSTKEY)');
SELECT SYSTEM$CLUSTERING_INFORMATION('SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_NOCLUSTER','(C_MKTSEGMENT, C_NATIONKEY)');
SELECT SYSTEM$CLUSTERING_INFORMATION('SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_NOCLUSTER','(C_MKTSEGMENT)');
SELECT SYSTEM$CLUSTERING_INFORMATION('SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_NOCLUSTER','(C_NATIONKEY)');

/**** CREATE TABLE WITH CLUSTER ***/
ALTER WAREHOUSE SCS SET WAREHOUSE_SIZE = XXLARGE;

CREATE OR REPLACE TRANSIENT TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_CLUSTERED
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.CUSTOMER;

ALTER  TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_CLUSTERED CLUSTER BY (C_MKTSEGMENT);
ALTER WAREHOUSE SCS SET WAREHOUSE_SIZE = XSMALL;

SELECT SYSTEM$CLUSTERING_INFORMATION('SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_CLUSTERED');

ALTER TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_CLUSTERED RESUME RECLUSTER;

/** RECLUSTER THE NON CLUSTERED TABLE WITH NATURAL ORDER WITHOUT AUTO-CLUSTERING**/
ALTER WAREHOUSE SCS SET WAREHOUSE_SIZE = XXXLARGE;

CREATE OR REPLACE TRANSIENT TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.ORDERS_NATURALLY_CLUSTERED
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.ORDERS ORDER BY O_ORDERDATE;

ALTER WAREHOUSE SCS SET WAREHOUSE_SIZE = XSMALL;

/** RECLUSTER TABLE AFTER LOADING DATA **/

ALTER TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_CLUSTERED CLUSTER BY (C_MKTSEGMENT);

SELECT SYSTEM$CLUSTERING_DEPTH('SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_CLUSTERED', '(C_CUSTKEY)');
SELECT SYSTEM$CLUSTERING_DEPTH('SNOWFLAKE_CODE_SAMPLE.PUBLIC.CUSTOMER_CLUSTERED', '(C_MKTSEGMENT)');
