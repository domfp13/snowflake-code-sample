USE ROLE SYSADMIN;
USE WAREHOUSE SCS;
USE DATABASE SNOWFLAKE_CODE_SAMPLE;
USE SCHEMA SNOWFLAKE_CODE_SAMPLE.PUBLIC;

-- ****************************** 1.- Creating a stage with directory table ******************************
CREATE OR REPLACE STAGE SNOWFLAKE_CODE_SAMPLE.PUBLIC.JSON_FILES_STAGE
  DIRECTORY = (ENABLE = TRUE);

-- ****************************** 2.- File Format ******************************
CREATE OR REPLACE FILE FORMAT SNOWFLAKE_CODE_SAMPLE.PUBLIC.FILE_FORMAT_JSON_GENERIC
 TYPE = 'JSON'
 ENABLE_OCTAL = FALSE
 ALLOW_DUPLICATE  = TRUE
 STRIP_OUTER_ARRAY = TRUE
 STRIP_NULL_VALUES = TRUE
 IGNORE_UTF8_ERRORS = FALSE;

-- ****************************** 3.- Loading file from local machine to Snowflake stage ******************************
PUT file://////Users/eplata/Developer/snowflake-code-sample/sql/06-advance-sql/SNOWBANK_PUBLIC_ACCOUNTS_1.json @SNOWFLAKE_CODE_SAMPLE.PUBLIC.JSON_FILES_STAGE;

LS @SNOWFLAKE_CODE_SAMPLE.PUBLIC.JSON_FILES_STAGE;

-- ****************************** 4.- Creating table from file structure ******************************
CREATE OR REPLACE TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.ACCOUNTS_SCHEMA_EVOLUTION
  USING TEMPLATE (
    SELECT ARRAY_AGG(OBJECT_CONSTRUCT(*))
      FROM TABLE(
        INFER_SCHEMA(
          LOCATION=>'@JSON_FILES_STAGE/SNOWBANK_PUBLIC_ACCOUNTS_1.json.gz',
          FILE_FORMAT=>'SNOWFLAKE_CODE_SAMPLE.PUBLIC.FILE_FORMAT_JSON_GENERIC'
        )
	)
) ENABLE_SCHEMA_EVOLUTION = TRUE;

DESCRIBE TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.ACCOUNTS_SCHEMA_EVOLUTION;
SHOW TABLES IN SNOWFLAKE_CODE_SAMPLE.PUBLIC STARTS WITH 'ACCOUNTS_SCHEMA_EVOLUTION'; -- check parameter ENABLE_SCHEMA_EVOLUTION

SELECT * FROM SNOWFLAKE_CODE_SAMPLE.PUBLIC.ACCOUNTS_SCHEMA_EVOLUTION LIMIT 0;

-- ****************************** 5.- Copying data into table ******************************
COPY INTO SNOWFLAKE_CODE_SAMPLE.PUBLIC.ACCOUNTS_SCHEMA_EVOLUTION
  FROM @SNOWFLAKE_CODE_SAMPLE.PUBLIC.JSON_FILES_STAGE
  FILE_FORMAT = SNOWFLAKE_CODE_SAMPLE.PUBLIC.FILE_FORMAT_JSON_GENERIC
  MATCH_BY_COLUMN_NAME = CASE_INSENSITIVE
  PATTERN = '.*.json.gz'
  PURGE = TRUE;

SELECT * FROM SNOWFLAKE_CODE_SAMPLE.PUBLIC.ACCOUNTS_SCHEMA_EVOLUTION;

SELECT COUNT(*) FROM SNOWFLAKE_CODE_SAMPLE.PUBLIC.ACCOUNTS_SCHEMA_EVOLUTION;

LS @SNOWFLAKE_CODE_SAMPLE.PUBLIC.JSON_FILES_STAGE;

-- ****************************** 6.- Adding new file that adds new columns to table ******************************
-- NOTE: LOOK INTO THE SECOND JSON FILE AND NOTICE ATTRIBUTE "ACCOUNT_CHANGE_DATE"
PUT file://////Users/eplata/Developer/snowflake-code-sample/sql/06-advance-sql/SNOWBANK_PUBLIC_ACCOUNTS_2.json @SNOWFLAKE_CODE_SAMPLE.PUBLIC.JSON_FILES_STAGE;

LS @SNOWFLAKE_CODE_SAMPLE.PUBLIC.JSON_FILES_STAGE;

COPY INTO SNOWFLAKE_CODE_SAMPLE.PUBLIC.ACCOUNTS_SCHEMA_EVOLUTION
  FROM @SNOWFLAKE_CODE_SAMPLE.PUBLIC.JSON_FILES_STAGE
  FILE_FORMAT = SNOWFLAKE_CODE_SAMPLE.PUBLIC.FILE_FORMAT_JSON_GENERIC
  MATCH_BY_COLUMN_NAME = CASE_INSENSITIVE
  PATTERN = '.*.json.gz'
  PURGE = TRUE;

DESCRIBE TABLE SNOWFLAKE_CODE_SAMPLE.PUBLIC.ACCOUNTS_SCHEMA_EVOLUTION;

SELECT * FROM SNOWFLAKE_CODE_SAMPLE.PUBLIC.ACCOUNTS_SCHEMA_EVOLUTION ORDER BY ACCOUNT_CHANGE_DATE ASC;
